{"version":3,"file":"static/js/382.181af3c1.chunk.js","mappings":"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","sources":["pages/CastPage/CastPage.styled.jsx","pages/CastPage/CastPage.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(130px, 5fr));\n  grid-gap: 15px;\n  margin: 0 auto;\n  padding: 0 15px;\n  list-style: none;\n  justify-content: center;\n  margin-top: 40px;\n`;\n\nexport const CastCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  background-color: rgba(0, 0, 0, 0.3);\n  backdrop-filter: blur(20px);\n  border-radius: 3px;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  width: 100%;\n  max-width: 200px;\n  height: 200px;\n  object-fit: cover;\n`;\n\nexport const CastInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 5px;\n  gap: 15px;\n`;\n\nexport const CastCharacter = styled.span`\n  color: white;\n  font-weight: 500;\n`;\n\nexport const CharacterName = styled.p`\n  margin: 0;\n  color: #042936;\n  font-weight: bold;\n`;\n\nexport const CastName = styled.p`\n  color: white;\n  font-size: 20px;\n  margin: 0;\n  font-weight: 700;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { useParams } from 'react-router-dom';\nimport { loadCastInfoMovie } from 'services/movies-api';\nimport { Sections, Title } from 'pages/HomePage/HomePage.styled';\nimport {\n  CastCard,\n  CastCharacter,\n  CastImg,\n  CastInfoWrapper,\n  CastList,\n  CastName,\n  CharacterName,\n} from './CastPage.styled';\n\nimport image from '../../images/image1.jpg';\n\nconst BASE_PHOTO_URL = 'https://image.tmdb.org/t/p/w200/';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n\n  useEffect(() => {\n    loadCastInfoMovie(movieId).then(setCastInfo);\n  }, [movieId]);\n\n  if (castInfo.length === 0) {\n    return null;\n  }\n  const ProfilePoster = profile_path => {\n    if (profile_path === null) {\n      return `${image}`;\n    }\n    return `${BASE_PHOTO_URL}${profile_path}`;\n  };\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <Sections>\n        <Title>Cast</Title>\n        <CastList>\n          {castInfo.map(actor => {\n            const { name, character, profile_path, id } = actor;\n            return (\n              <CastCard key={id}>\n                <div>\n                  <CastImg src={`${ProfilePoster(profile_path)}`} alt={name} />\n                </div>\n                <CastInfoWrapper>\n                  <CastName>{name}</CastName>\n                  <CharacterName>\n                    Character: <CastCharacter> {character}</CastCharacter>\n                  </CharacterName>\n                </CastInfoWrapper>\n              </CastCard>\n            );\n          })}\n        </CastList>\n      </Sections>\n    </Suspense>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'd28587289cbb1fa464f22095b510f01a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const loadTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  const trendingMovies = response.data.results.map(movie => {\n    const { id, title, poster_path } = movie;\n    return {\n      id,\n      title,\n      poster_path,\n    };\n  });\n  return trendingMovies;\n};\n\nexport const loadFullInfoMovie = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n  const { vote_average, title, overview, genres, poster_path, release_date } =\n    response.data;\n\n  return {\n    vote_average,\n    title,\n    overview,\n    genres,\n    poster_path,\n    release_date,\n  };\n};\n\nexport const loadCastInfoMovie = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  const castInfo = response.data.cast.map(el => {\n    const { name, character, profile_path, id } = el;\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n\n  return castInfo;\n};\n\nexport const loadReviewsMovie = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results.map(el => {\n    const { id, author, content, author_details } = el;\n    return {\n      id,\n      author,\n      content,\n      author_details,\n    };\n  });\n\n  return reviews;\n};\n\nexport const loadMovieOnSearch = searchQuery => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`\n  )\n    .then(response => response.json())\n    .then(data => {\n      const movieList = data.results.map(el => {\n        const { id, title, poster_path } = el;\n        return {\n          id,\n          title,\n          poster_path,\n        };\n      });\n\n      return movieList;\n    });\n};\n"],"names":["CastList","styled","CastCard","CastImg","CastInfoWrapper","CastCharacter","CharacterName","CastName","movieId","useParams","useState","castInfo","setCastInfo","useEffect","loadCastInfoMovie","then","length","ProfilePoster","profile_path","image","Suspense","fallback","Loader","map","actor","name","character","id","src","alt","API_KEY","axios","loadTrendingMovies","response","trendingMovies","data","results","movie","title","poster_path","loadFullInfoMovie","vote_average","overview","genres","release_date","cast","el","loadReviewsMovie","reviews","author","content","author_details","loadMovieOnSearch","searchQuery","fetch","json"],"sourceRoot":""}